{
  "version": 3,
  "sources": ["isikukood.esm.js"],
  "sourcesContent": ["\"use strict\";\nclass Isikukood {\n  constructor(c) {\n    this._code = String(c);\n  }\n  get code() {\n    return this._code;\n  }\n  set code(c) {\n    this._code = String(c);\n  }\n  getControlNumber(code = \"\") {\n    if (!code) {\n      code = this.code;\n    }\n    const mul1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1];\n    const mul2 = [3, 4, 5, 6, 7, 8, 9, 1, 2, 3];\n    let controlNum = 0;\n    let total = 0;\n    for (let i = 0; i < 10; ++i) {\n      total += Number(code.charAt(i)) * mul1[i];\n    }\n    controlNum = total % 11;\n    total = 0;\n    if (controlNum === 10) {\n      for (let i = 0; i < 10; ++i) {\n        total += Number(code.charAt(i)) * mul2[i];\n      }\n      controlNum = total % 11;\n      if (controlNum === 10) {\n        controlNum = 0;\n      }\n    }\n    return controlNum;\n  }\n  validate() {\n    if (this.code.charAt(0) === \"0\") {\n      return false;\n    }\n    if (this.code.length !== 11) {\n      return false;\n    }\n    const control = this.getControlNumber();\n    if (control !== Number(this.code.charAt(10))) {\n      return false;\n    }\n    const year = Number(this.code.substring(1, 3));\n    const month = Number(this.code.substring(3, 5));\n    const day = Number(this.code.substring(5, 7));\n    const birthDate = this.getBirthday();\n    return year === birthDate.getFullYear() % 100 && birthDate.getMonth() + 1 === month && day === birthDate.getDate();\n  }\n  getGender() {\n    const genderNum = this.code.charAt(0);\n    let retval;\n    switch (genderNum) {\n      case \"1\":\n      case \"3\":\n      case \"5\":\n        retval = Gender.MALE;\n        break;\n      case \"2\":\n      case \"4\":\n      case \"6\":\n        retval = Gender.FEMALE;\n        break;\n      default:\n        retval = Gender.UNKNOWN;\n    }\n    return retval;\n  }\n  getAge() {\n    return Math.floor((Date.now() - this.getBirthday().getTime()) / (86400 * 1e3) / 365.25);\n  }\n  getBirthday() {\n    let year = Number(this.code.substring(1, 3));\n    const month = Number(this.code.substring(3, 5).replace(/^0/, \"\")) - 1;\n    const day = Number(this.code.substring(5, 7).replace(/^0/, \"\"));\n    const firstNumber = this.code.charAt(0);\n    for (let i = 1, j = 1800; i <= 8; i += 2, j += 100) {\n      if ([i, i + 1].map(String).includes(firstNumber)) {\n        year += j;\n      }\n    }\n    return new Date(year, month, day);\n  }\n  parse() {\n    return Isikukood.parse(this.code);\n  }\n  static parse(code) {\n    const ik = new this(code);\n    const data = {\n      gender: ik.getGender(),\n      birthDay: ik.getBirthday(),\n      age: ik.getAge()\n    };\n    return data;\n  }\n  static generate(params = {}) {\n    let y;\n    let m;\n    let d;\n    const gender = params.gender || (Math.round(Math.random()) === 0 ? Gender.MALE : Gender.FEMALE);\n    let personalId = \"\";\n    const hospitals = [\n      \"00\",\n      \"01\",\n      \"02\",\n      \"22\",\n      \"27\",\n      \"37\",\n      \"42\",\n      \"47\",\n      \"49\",\n      \"52\",\n      \"57\",\n      \"60\",\n      \"65\",\n      \"70\",\n      \"95\"\n    ];\n    if (![Gender.MALE, Gender.FEMALE].includes(gender)) {\n      return \"\";\n    }\n    if (params.birthYear) {\n      y = params.birthYear;\n    } else {\n      y = Math.round(Math.random() * 100 + 1900 + (new Date().getFullYear() - 2e3));\n    }\n    if (params.birthMonth) {\n      m = params.birthMonth;\n    } else {\n      m = Math.floor(Math.random() * 12) + 1;\n    }\n    if (params.birthDay) {\n      d = params.birthDay;\n    } else {\n      const daysInMonth = new Date(y, m, 0).getDate();\n      d = Math.floor(Math.random() * daysInMonth) + 1;\n    }\n    for (let i = 1800, j = 2; i <= 2100; i += 100, j += 2) {\n      if (y >= i && y < i + 100) {\n        switch (gender) {\n          case Gender.MALE:\n            personalId += String(j - 1);\n            break;\n          case Gender.FEMALE:\n            personalId += String(j);\n            break;\n          default:\n            return \"\";\n        }\n      }\n    }\n    personalId += String(y).substring(2, 4);\n    personalId += String(m).length === 1 ? `0${m}` : `${m}`;\n    personalId += String(d).length === 1 ? `0${d}` : `${d}`;\n    personalId += hospitals[Math.floor(Math.random() * hospitals.length)];\n    personalId += String(Math.floor(Math.random() * 10));\n    personalId += String(this.prototype.getControlNumber(personalId));\n    return personalId;\n  }\n}\nvar Gender = /* @__PURE__ */ ((Gender2) => {\n  Gender2[\"MALE\"] = \"male\";\n  Gender2[\"FEMALE\"] = \"female\";\n  Gender2[\"UNKNOWN\"] = \"unknown\";\n  return Gender2;\n})(Gender || {});\nexport {\n  Gender,\n  Isikukood as default\n};\n"],
  "mappings": "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",
  "names": []
}
